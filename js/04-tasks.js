// 1. Напиши функцію, яка приймає два параметри (a і b) та повертає їхню суму.

function sum(a, b) {
  return a + b;
}

//!======================================================
// 1. Напиши функцію, яка приймає три параметри (a, b, c) і повертає максимальне з
//    них.

// function getMax(a, b, c) {
//   return Math.max(a, b, c);
// }

// console.log(getMax(7, 9, 1));
//!======================================================
// 1. Напиши функцію, яка приймає три параметри (число, мінімум і максимум) та
//    повертає true, якщо число знаходиться між мінімумом і максимумом (включно), і
//    false, якщо ні.

//!======================================================

// 1. Напиши функцію, яка приймає рядок і повертає перший символ цього рядка.
// 1. Напиши функцію, яка приймає рядок і повертає останній символ цього рядка.
// 1. Напиши функцію, яка приймає число і повертає true, якщо число парне, і false,
//    якщо ні.
// 1. Напиши функцію яка приймає два числа. Якщо одне з чисел дорівнює нуль то
//    повернути null, в іншому випадку повернути добуток цих двох чисел.
// 1. Напиши функцію яка приймає рядок і повертає цей самий рядок але огорнутий у
//    тег div. Приклад: на вході був рядок `"Hello world"` а на виході рядок
//    `"<div>Hello world<div>"`
// 1. Напиши функцію, яка приймає рядок і повертає кількість слів у ньому (слова
//    розділені пробілами).
// 1. Напиши функцію, яка приймає рядок і повертає його довжину помножену на
//    кількість слів в цьому рядку.
// 1. Напиши функцію, яка приймає рядок і повертає кількість голосних літер у ньому
//    (a, e, i, o, u). Використовуйте метод includes та цикл.
// 1. Напиши функцію, яка приймає рядок і повертає новий рядок, де слова
//    розташовані у зворотному порядку.
//!======================================================

// 1. Напиши функцію, яка приймає довільну кількість аргументів і повертає true,
//    якщо всі аргументи є числами, і false, якщо ні.

// function task1() {
//   const args = Array.from(arguments);
//   debugger;
//   for (const item of args) {
//     const isNumber = item === +item;
//     if (!isNumber) return false;
//   }
//   return true;
// }

// task1(1, 3, '5', 5);

//!======================================================
// 1. Напиши функцію, яка приймає довільну кількість аргументів і повертає їх
//    об'єднаними в один рядок, розділений комами.

// function task2() {
//   const args = Array.from(arguments);
//   return args.join(', ') + '.';
// }

// console.log(task2('Max', 'David', 'Timur', 'Lika'));

//!======================================================

// 1. Напиши функцію, яка приймає довільну кількість чисел і повертає їхній
//    добуток.

function task3() {
  const args = Array.from(arguments);
  let total = 1;

  for (const item of args) {
    total += item;
  }

  return total;
}

//!======================================================
// 1. Напиши функцію, яка приймає довільну кількість чисел і повертає кількість
//    непарних чисел серед них.

function task4() {
  const args = Array.from(arguments);
  let count = 0;

  for (const item of args) {
    if (item % 2 !== 0) {
      count++;
    }
  }

  return count;
}

// console.log(task4(1, 3, 5, 5, 23, 2, 2, 4, 34, 1, 2, 23));

//!======================================================
// 1. Напиши функцію яка приймає довільну кількість рядочків і повертає той рядок
//    що є найдовшим

// function task5() {
//   const array = Array.from(arguments);
//   let maxStr = array[0];

//   for (const str of array) {
//     if (str.length > maxStr.length) {
//       maxStr = str;
//     }
//   }

//   console.log(maxStr);
// }

// task5('Hello', 'World', 'test', 'JavaScript', 'React');

//!======================================================
// 1. Напиши функцію яка приймає довільну кількість рядочків і обєднує їх в один
//    цілий рядок.

//!======================================================

// function foo() {
//   console.log('test');
//   foo();
// }

// foo()

//!======================================================

// 1 1 2 3 5 8 13
//              6

// function fibba(i) {
//   if (i <= 1) return 1;
//   return fibba(i - 1) + fibba(i - 2);
// }

// console.log(fibba(1));
//!======================================================

// const arr = [1, 2, 3, 4, 4, 1, 2, 3, 5, 51];

// for (let i = 0; i < arr.length - 1; i++) {
//   for (let j = i + 1; j < arr.length; j++) {
//     if (arr[j] < arr[i]) {
//       const tmp = arr[i];
//       arr[i] = arr[j];
//       arr[j] = tmp;
//     }
//   }
// }

// console.log(arr);

//!======================================================
// let x = 10;
// let y = 20;

// let tmp = x;
// x = y;
// y = tmp;

//!====================================================

function getMax(arr) {
  let max = arr[0];
  for (const item of arr) {
    if (max < item) {
      max = item;
    }
  }
  return max;
}

function isEmpty(arr) {
  for (const item of arr) {
    if (item) return true;
  }

  return false;
}

function task10() {
  const arr = [2, 5, 1, 3, 99999999999, 2, 1, 2, 4];

  let total = 0;
  while (isEmpty(arr)) {
    let max = getMax(arr);
    const firstIndex = arr.indexOf(max);
    const lastIndex = arr.lastIndexOf(max);

    if (firstIndex === lastIndex) {
      arr[firstIndex]--;
      continue;
    }

    for (let i = firstIndex; i <= lastIndex; i++) {
      if (arr[i] === max) {
        arr[i]--;
      } else {
        total++;
      }
    }
  }

  console.log(total);
}

task10();
